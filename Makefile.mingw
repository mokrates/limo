# -*- makefile -*-

CC=i686-w64-mingw32-gcc
DLLSOURCEDIR=/usr/i686-w64-mingw32/sys-root/mingw/bin
export CC
AR=$(CC)-ar
export AR

INSTALL_PREFIX=c:/limo/
LIMO_PREFIX=$(INSTALL_PREFIX)

DEBUG=-g -Wall #-DNDEBUG
PROFILING= # -pg -no-pie
OPTIMIZE=-O3
OPTIONS=-DLIMO_PREFIX=\"$(LIMO_PREFIX)\"

BASEOBJ=writer.o reader.o error.o makers.o vars.o eval.o \
	helpers.o builtinenv.o builtins.o numbers_gmp.o annotations.o \
	dict.o special.o block.o limpy.o misc.o inlined_mods.o dynamicvars.o \
	limo.o
OBJ=main.o $(BASEOBJ)
EXEOBJ=exelimo.o $(BASEOBJ)
HEADERS=limo.h config.h

CFLAGS += $(OPTIMIZE) $(DEBUG) $(PROFILING) $(OPTIONS)
export CFLAGS

.PHONY: all libs clean realclean install uninstall

all: TAGS libs limo

exelimo: $(EXEOBJ)
	$(AR) rcs liblimo.a $(EXEOBJ)
exelimo.o: $(HEADERS) limo.c
	$(CC) $(DEBUG) -c -DLIMO_MAKE_EXECUTABLE limo.c -o exelimo.o

inlined_mods.c: inlined.mods
	./make-inlined_mods-c.sh

limo-mingw: $(OBJ) libs info
	$(CC) $(OBJ) $(PROFILING) `./inline-cfg.sh` -lm -lgc -lpthread -lgmp -ldl -lreadline -o limo


limo-wsl: limo-almost-static info

libs:
	$(MAKE) -C libs

TAGS:
	etags.emacs --regex='{c}/BUILTIN\(FUN\)?(\([^)]+\)/\2/' *.c *.h libs/*/*.c libs/*/*.h

$(OBJ): $(HEADERS) Makefile

info:
	$(MAKE) -C docs docs

clean:	
	rm -f *.o *~
	rm -f inlined_mods.c
	$(MAKE) -C libs clean
	$(MAKE) -C docs clean

realclean: clean
	$(MAKE) -C libs realclean
	make -C docs realclean
	rm -f limo

install:
	mkdir -p $(LIMO_PREFIX)
	cp -f *.limo $(LIMO_PREFIX)
#	cp -f libs/*/*.so $(LIMO_PREFIX)
	cp -f libs/*/*.ttf $(LIMO_PREFIX)
	cp -rf limo-code/* $(LIMO_PREFIX)
#	cp -f docs/limo-info.info $(LIMO_PREFIX)
	mkdir -p $(INSTALL_PREFIX)/bin
	cp -f limo $(INSTALL_PREFIX)/bin

install-mingw:
	mkdir -p $(LIMO_PREFIX)
	cp -f *.limo $(LIMO_PREFIX)
#	cp -f libs/*/*.so $(LIMO_PREFIX)
	cp -f libs/*/*.ttf $(LIMO_PREFIX)
	cp -rf limo-code/* $(LIMO_PREFIX)
#	cp -f docs/limo-info.info $(LIMO_PREFIX)
	mkdir -p $(INSTALL_PREFIX)
	cp -f limo.exe $(INSTALL_PREFIX)

uninstall:
	rm -rf $(LIMO_PREFIX)
	rm -f $(INSTALL_PREFIX)/bin/limo
