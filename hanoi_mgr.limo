;; -*- scheme -*-

;;;;  die tuerme von hanoi mit SDL!

;(setf _trace :t)

(loaddll (string-concat _limo-prefix "mgr2sdl_limo.so"))

(setq anzahl_scheiben 15)

(setq tuerme (list (range 1 (+ 1 anzahl_scheiben) 1) () ()))

(defun set-nth (n l v)
  (if (eq n 0)
      (setcar l v)
      (set-nth (- n 1) (cdr l) v)))

(setq scheibenhoehe  (/ 440 anzahl_scheiben))
(setq scheibenbreite (/ 100 anzahl_scheiben))

(defun zeichne-scheibe (turm hoehe scheibe farbe)
  (setq xoffset (+ 120 (* 200 turm)))
  (setq hoehe (- 460 (* hoehe scheibenhoehe)))

  (mgr-hline (- xoffset (* scheibenbreite scheibe))
	     (+ xoffset (* scheibenbreite scheibe))
	     hoehe
	     farbe)

  (mgr-vline (- xoffset (* scheibenbreite scheibe))
	     hoehe
	     (+ hoehe scheibenhoehe -1)
	     farbe)

  (mgr-vline (+ xoffset (* scheibenbreite scheibe))
	     hoehe
	     (+ hoehe scheibenhoehe -1)
	     farbe))
;; turm hoehe scheibe farbe

(defun hanoi (von temp nach scheibe)
       (when (gtn scheibe 0)
	     (hanoi von nach temp (- scheibe 1))
	     
	     (zeichne-scheibe von 
			      (list-length (nth von tuerme))
			      (car (nth von tuerme))
			      0)
	     (set-nth nach tuerme (cons (car (nth von tuerme)) (nth nach tuerme)))
	     (set-nth von  tuerme (cdr (nth von tuerme)))
	     (zeichne-scheibe nach 
			      (list-length (nth nach tuerme))
			      (car (nth nach tuerme))
			      (car (nth nach tuerme)))
	     (write tuerme)
;	     (sleep 1)
	     (hanoi temp von nach (- scheibe 1))))

(mgr-startgraphics)

(write tuerme)
(for-list s (car tuerme)
	  (zeichne-scheibe 0 (list-length s) (car s) (car s)))
(sleep 1)
(hanoi 0 1 2 anzahl_scheiben)
