(import "hex.limo")

(defun from-backslash-u (str)
  "decode \uXXXX unicode-notation"
  (let ((result "")
        (i 0)
        (strlen (string-length str))
        (result+= (macro (x) `(setf result (string-concat result ,x)))))
    (while (< i strlen)
      (cond ((and (= (string-nth i str) "\\")
                  (= (string-nth (+ i 1) str) "u"))
             (let ((unicode (from-hex (string-slice str (+ i 2) (+ i 6)))))
               (cond ((< unicode (from-hex "80"))
                      (result+= (chr unicode)))
                     ((< unicode (from-hex "800"))
                      (result+= (chr (+ 192 (idiv unicode 64))))
                      (result+= (chr (+ 128 (mod unicode 64)))))
                     ((< unicode (from-hex "10000"))
                      (result+= (chr (+ 224 (idiv unicode 4096))))
                      (result+= (chr (+ 128 (idiv (mod unicode 4096) 64))))
                      (result+= (chr (+ 128 (mod unicode 64))))))
               (incf i 6)))
            ((and (= (string-nth i str) "\\")
                  (= (string-nth (+ i 1) str) "\\"))
             (result+= "\\\\")
             (incf i 2))
            (:else
             (result+= (string-nth i str))
             (incf i))))
    result))
