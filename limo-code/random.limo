(defun random-byte (n)
  (with-file-open "/dev/urandom" "r" f
    (mod (ord (file-getc f)) n)))

(defun random-short (n)
  (mod (+ (* 255 (random-byte 256))
	  (random-byte 256))
       n))

(defun shuffle (l)   ; merge
  (defun seconds (l) ; every second item
    (when l
      (dcons (car l)
             (when (cdr l) (seconds (cddr l))))))
  
  (defun merge (l m)
    (cond ((and l m)
           (if (= 0 (random-byte 2))
               (dcons (car l) (merge (cdr l) m))
               (dcons (car m) (merge l (cdr m)))))
          (l l)
          (m m)
          (:else nil)))
  (undyn
   (when l
     (let ((left (undyn (seconds l)))
           (right (undyn (seconds (cdr l)))))
       (if (not (and left right))
           (or left right)
           (merge (shuffle left) (shuffle right)))))))
