(mod-load "rlcompleter")
(mod-load "regex")

(defun simple-completer (text)
  (defun upcase-str (str)
    (defun upcase (char)
      (if (and (>= (ord char) (ord "a"))
	       (<= (ord char) (ord "z")))
	  (chr (- (+ (ord char) (ord "A")) (ord "a")))
	  char))
    (list-to-string
     (map1 upcase (string-to-list str))))
  
  (defun globalenv (cu)
    (if (car (env-extract cu))
	(globalenv (car (env-extract cu)))
	cu))
  
  (defun string-startswith (pre str)
    (eq (string-slice str 0 (string-length pre)) pre))
    
  (setq lword (car (regex-match "[[:alnum:]$*-_/+~%&]*$" text 1 (dict-getvalue regex-const 'reg_extended) 0)))
  (setq prefix (string-slice text 0 (- (string-length text) (string-length lword))))
  (map1 (lambda (x) (list (list-to-string (list prefix x " ")) x))
	(dfilter (curry string-startswith (upcase-str lword))
		 (dmap1 (lambda (x) (symbol-to-string (car x)))
			(dict-to-list (cdr (env-extract (globalenv (env-current)))))))))

(defun limo-rl-completer (text)
  (defun upcase-str (str)
    (defun upcase (char)
      (if (and (>= (ord char) (ord "a"))
	       (<= (ord char) (ord "z")))
	  (chr (- (+ (ord char) (ord "A")) (ord "a")))
	  char))
    (list-to-string
     (map1 upcase (string-to-list str))))
  
  (defun globalenv (cu)
    (if (car (env-extract cu))
	(globalenv (car (env-extract cu)))
	cu))
  
  (defun string-startswith (pre str)
    (eq (string-slice str 0 (string-length pre)) pre))
  
  (setq glenv (globalenv (env-current)))
  (defun getenv (sym)
    (setq d (cdr (env-extract glenv)))
    (if (and (dict-has-key d sym)
	     (envp (dict-getvalue d sym)))
	(dict-getvalue d sym)
	()))
  
  (defun allsyms (env)
    (if env
	(append (dmap1 (lambda (x) (car x))
		       (dict-to-list (cdr (env-extract env))))
		(allsyms (car (env-extract env))))
	()))

  (defun basepath (path)
    (list-to-string (reverse (member "/" (reverse (string-to-list path))))))

  (defun rest-half-path (path)
    (string-slice path (string-length (basepath path)) (string-length path)))
  
  (setq res nil)
  
  (setq br-match-obj (regex-match "\\[\\s*([[:alnum:]$*-_/+~%&]*)$" text 2 (dict-getvalue regex-const 'reg_extended) 0))
  (setq br-dot (regex-match "\\[\\s*([[:alnum:]$*-_/+~%&]*)\\s+\\.$" text 2 (dict-getvalue regex-const 'reg_extended) 0))
  (setq br-match (regex-match "\\[\\s*([[:alnum:]$*-_/+~%&]*)\\s+(\\.\\s)?\\s*([[:alnum:]$*-_/+~%&]*)$"
			      text 4 (dict-getvalue regex-const 'reg_extended) 0))

  (setq path-match (regex-match "#[Pp]\"([^\"]*)$" text 2 (dict-getvalue regex-const 'reg_extended) 0))

  (sort (lambda (x y) (string< (cadr x) (cadr y)))
	(cond (br-match-obj      ;; complete [incompl...
	       (setq lword (cadr br-match-obj))
	       (setq prefix (string-slice text 0 (- (string-length text) (string-length lword))))
	       (setq sym-list (map car
				   (dict-to-list (cdr (env-extract (globalenv (env-current)))))))
	       (map1 (lambda (x) (list (list-to-string (list prefix x " ")) x))
		     (dfilter (curry string-startswith (upcase-str lword))
			      (dmap1 symbol-to-string
				     (filter getenv sym-list)))))
	      (br-dot
	       (list (list (string-concat text " ") text)))
	      
	      (br-match            ;; complete '[env' and '[env . incompl...'
	       (setq lword (cadr br-match))
	       (cond ((= (list-length br-match) 3)
		      (setq rword (caddr br-match)))
		     ((= (list-length br-match) 4)
		      (setq rword (caddr (cdr br-match))))
		     (:t (setq rword "")))
	       (setq prefix (string-slice text 0 (- (string-length text) (string-length rword))))

	       (when (setq theenv (getenv (make-sym lword)))
		 (map1 (lambda (x) (list (list-to-string (list prefix x " ")) x))
		       (dfilter (curry string-startswith (upcase-str rword))
				(dmap1 symbol-to-string
				       (allsyms theenv))))))

              (path-match
               (setq half-path (cadr path-match))
               (setq bp (basepath half-path))
               (setq prefix (string-slice text 0 (- (string-length text) (string-length half-path))))
               (try
		(progn                 
		 (setq dir (file-readdir (if (= "" bp) "." bp)))
		 (map1 (comp (lambda (x) (list (string-concat prefix x) x))
			     (curry string-concat bp))
                       (dfilter (curry string-startswith (rest-half-path half-path))
				(dmap1 (lambda (x) (if (= "d" (cadr x))
						  (string-concat (car x) "/")
						  (string-concat (car x) "\" ")))
                                       dir))))
		()))
              
	      
	      (:t       ;; complete the rest
	       (setq lword (car (regex-match "[[:alnum:]$*-_/+~%&]*$" text 1 (dict-getvalue regex-const 'reg_extended) 0)))
	       (setq prefix (string-slice text 0 (- (string-length text) (string-length lword))))
	       (map1 (lambda (x) (list (list-to-string (list prefix x " ")) x))
		     (dfilter (curry string-startswith (upcase-str lword))
			      (dmap1 (lambda (x) (symbol-to-string (car x)))
				     (dict-to-list (cdr (env-extract glenv))))))))))

  
;;(set-rlcompleter (cons simple-completer ""))
(set-rlcompleter (cons limo-rl-completer ""))
